#include "stdafx.h"
#include <iostream>
using namespace std;
struct node
{
	int val;
	node* next;
};
node *createSinglyLinkedList(int a[], int len)
{
	if (!len) return NULL;
	node *head = new node();
	head->val = a[0];
	head->next = NULL;
	node *p = head;
	for (int i = 1; i < len; i++)
	{
		p->next = new node;
		p->next->val = a[i];
		p->next->next = NULL;
		p = p->next;
	}
	return head;
}
void printLinkedList(node *h)
{
	while (h != NULL)
	{
		cout << h->val << ' ';
		h = h->next;
	}
	cout << endl;
	return;
}
void removeDup(node *head)
{
	if (head == NULL) return;
	if (head->next == NULL) return;
	node *h = head;
	while (h->next != NULL)
	{
		node *p = h->next;
		node *q = h;
		while (p != NULL)
		{
			if (h->val == p->val)
			{
				p = p->next;
				delete q->next;
				q->next = p;
				if (p == NULL) break;
				continue;
			}
			p = p->next;
			q = q->next;
		}
		h = h->next;
	}
	return;
}
int main()
{
	int a[]{ 5,3,2,5,5,4,7,8,5,3,1,4,3,6,8,5 };
	node *h = createSinglyLinkedList(a, sizeof(a)/sizeof(int));
	printLinkedList(h);
	removeDup(h);
	printLinkedList(h);
	getchar();
    return 0;
}
